From 6d37ce917878ee37a43865bc1845c819651b80ae Mon Sep 17 00:00:00 2001
From: Surion <realmsofwarcraft@gmail.com>
Date: Sat, 14 Jul 2012 18:31:19 -0500
Subject: [PATCH] 2012_07_14-account_access

---
 .../2012_07_14-auth-account_access.sql             |   22 ++++++++
 src/game/AccountMgr.cpp                            |    3 +-
 src/game/Language.h                                |    2 +
 src/game/Level2.cpp                                |    6 ++-
 src/game/Level3.cpp                                |   24 +++++++-
 src/game/WorldSocket.cpp                           |   56 +++++++++++++-------
 src/mangosd/CliRunnable.cpp                        |    6 ++-
 src/realmd/AuthSocket.cpp                          |   11 ++++-
 8 files changed, 104 insertions(+), 26 deletions(-)
 create mode 100644 sql/account_access/2012_07_14-auth-account_access.sql

diff --git a/sql/account_access/2012_07_14-auth-account_access.sql b/sql/account_access/2012_07_14-auth-account_access.sql
new file mode 100644
index 0000000..3120822
--- /dev/null
+++ b/sql/account_access/2012_07_14-auth-account_access.sql
@@ -0,0 +1,22 @@
+-- Table structure for `account_access`
+DROP TABLE IF EXISTS `account_access`;
+CREATE TABLE `account_access` (
+  `id` bigint(20) unsigned NOT NULL,
+  `gmlevel` tinyint(3) unsigned NOT NULL,
+  `RealmID` int(11) NOT NULL,
+  PRIMARY KEY (`id`,`RealmID`)
+) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;
+-- export current gm account to the new table
+-- RealmID -1 = all realms
+INSERT INTO `account_access` (id, gmlevel, RealmID)
+SELECT `id`, `gmlevel`, -1 FROM `account` WHERE `gmlevel` > 0;
+-- Remove the gmlevel field from account
+ALTER TABLE account DROP COLUMN `gmlevel`;
+
+-- command table
+UPDATE command 
+SET help = 'Syntax: .account set gmlevel [$account] #level [#realmid]\r\n\r\nSet the security level for targeted player (can\'t be used at self) or for account $name to a level of #level on the realm #realmID.\r\n\r\n#level may range from 0 to 3.\r\n\r\n#reamID may be -1 for all realms.'
+WHERE name = 'account set gmlevel';
+
+INSERT INTO mangos_string VALUES 
+(11001, 'You have not chosen -1 or the current realmID that you are on.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
diff --git a/src/game/AccountMgr.cpp b/src/game/AccountMgr.cpp
index b8e4d55..0431368 100644
--- a/src/game/AccountMgr.cpp
+++ b/src/game/AccountMgr.cpp
@@ -87,6 +87,7 @@ AccountOpResult AccountMgr::DeleteAccount(uint32 accid)
 
     bool res =
         LoginDatabase.PExecute("DELETE FROM account WHERE id='%u'", accid) &&
+        LoginDatabase.PExecute("DELETE FROM account_access WHERE id ='%d'", accid) &&
         LoginDatabase.PExecute("DELETE FROM realmcharacters WHERE acctid='%u'", accid);
 
     LoginDatabase.CommitTransaction();
@@ -159,7 +160,7 @@ uint32 AccountMgr::GetId(std::string username)
 
 AccountTypes AccountMgr::GetSecurity(uint32 acc_id)
 {
-    QueryResult *result = LoginDatabase.PQuery("SELECT gmlevel FROM account WHERE id = '%u'", acc_id);
+    QueryResult *result = LoginDatabase.PQuery("SELECT gmlevel FROM account_access WHERE id = '%u'", acc_id);
     if(result)
     {
         AccountTypes sec = AccountTypes((*result)[0].GetInt32());
diff --git a/src/game/Language.h b/src/game/Language.h
index 582d37d..76a97d5 100644
--- a/src/game/Language.h
+++ b/src/game/Language.h
@@ -972,6 +972,8 @@ enum MangosStrings
     // Use for not-in-offcial-sources patches
     //                                    10000-10999
 
+    LANG_INVALID_REALMID                = 11001,
+
     // Use for custom patches             11000-11999
 
     // NOT RESERVED IDS                   12000-1999999999
diff --git a/src/game/Level2.cpp b/src/game/Level2.cpp
index feccf9d..f2c712d 100644
--- a/src/game/Level2.cpp
+++ b/src/game/Level2.cpp
@@ -2573,7 +2573,11 @@ bool ChatHandler::HandlePInfoCommand(char* args)
     AccountTypes security = SEC_PLAYER;
     std::string last_login = GetMangosString(LANG_ERROR);
 
-    QueryResult* result = LoginDatabase.PQuery("SELECT username,gmlevel,last_ip,last_login FROM account WHERE id = '%u'",accId);
+    QueryResult* result = LoginDatabase.PQuery("SELECT a.username,aa.gmlevel,a.email,a.last_ip,a.last_login "
+                                                "FROM account a "
+                                                "LEFT JOIN account_access aa "
+                                                "ON (a.id = aa.id) "
+                                                "WHERE a.id = '%u'",accId);
     if (result)
     {
         Field* fields = result->Fetch();
diff --git a/src/game/Level3.cpp b/src/game/Level3.cpp
index b62aad8..8e9aac6 100644
--- a/src/game/Level3.cpp
+++ b/src/game/Level3.cpp
@@ -1142,6 +1142,7 @@ bool ChatHandler::HandleAccountSetGmLevelCommand(char* args)
         return false;
 
     int32 gm;
+	uint32 gmRealmID = realmID;
     if (!ExtractInt32(&args, gm))
         return false;
 
@@ -1159,13 +1160,19 @@ bool ChatHandler::HandleAccountSetGmLevelCommand(char* args)
 
     /// account can't set security to same or grater level, need more power GM or console
     AccountTypes plSecurity = GetAccessLevel();
-    if (AccountTypes(gm) >= plSecurity )
+    if (AccountTypes(gm) >= plSecurity  || (gmRealmID != realmID && plSecurity < SEC_CONSOLE))
     {
         SendSysMessage(LANG_YOURS_SECURITY_IS_LOW);
         SetSentErrorMessage(true);
         return false;
     }
-
+// Check if provided realmID is not current realmID, or isn't -1
+        if (gmRealmID != realmID && gmRealmID != -1)
+        {
+            SendSysMessage(LANG_INVALID_REALMID);
+            SetSentErrorMessage(true);
+            return false;
+        }
     if (targetPlayer)
     {
         ChatHandler(targetPlayer).PSendSysMessage(LANG_YOURS_SECURITY_CHANGED,GetNameLink().c_str(), gm);
@@ -1173,7 +1180,18 @@ bool ChatHandler::HandleAccountSetGmLevelCommand(char* args)
     }
 
     PSendSysMessage(LANG_YOU_CHANGE_SECURITY, targetAccountName.c_str(), gm);
-    LoginDatabase.PExecute("UPDATE account SET gmlevel = '%i' WHERE id = '%u'", gm, targetAccountId);
+	// If gmRealmID is -1, delete all values for the account id, else, insert values for the specific realmID
+        if (gmRealmID == -1)
+        {
+            LoginDatabase.PExecute("DELETE FROM account_access WHERE id = '%u'", targetAccountId);
+            LoginDatabase.PExecute("INSERT INTO account_access VALUES ('%u', '%d', -1)", targetAccountId, gm);
+        }
+        else
+        {
+            LoginDatabase.PExecute("DELETE FROM account_access WHERE id = '%u' AND RealmID = '%d'", targetAccountId, realmID);
+            LoginDatabase.PExecute("INSERT INTO account_access VALUES ('%u','%d','%d')", targetAccountId, gm, realmID);
+        }
+    //LoginDatabase.PExecute("UPDATE account_access SET gmlevel = '%i' WHERE id = '%u'", gm, targetAccountId);
 
     return true;
 }
diff --git a/src/game/WorldSocket.cpp b/src/game/WorldSocket.cpp
index 62beec0..632cb9e 100644
--- a/src/game/WorldSocket.cpp
+++ b/src/game/WorldSocket.cpp
@@ -789,15 +789,14 @@ int WorldSocket::HandleAuthSession (WorldPacket& recvPacket)
     QueryResult *result =
           LoginDatabase.PQuery ("SELECT "
                                 "id, "                      //0
-                                "gmlevel, "                 //1
-                                "sessionkey, "              //2
-                                "last_ip, "                 //3
-                                "locked, "                  //4
-                                "v, "                       //5
-                                "s, "                       //6
-                                "expansion, "               //7
-                                "mutetime, "                //8
-                                "locale "                   //9
+                                "sessionkey, "              //1
+                                "last_ip, "                 //2
+                                "locked, "                  //3
+                                "v, "                       //4
+                                "s, "                       //5
+                                "expansion, "               //6
+                                "mutetime, "                //7
+                                "locale "                   //8
                                 "FROM account "
                                 "WHERE username = '%s'",
                                 safe_account.c_str ());
@@ -816,13 +815,13 @@ int WorldSocket::HandleAuthSession (WorldPacket& recvPacket)
 
     Field* fields = result->Fetch ();
 
-    expansion = ((sWorld.getConfig(CONFIG_UINT32_EXPANSION) > fields[7].GetUInt8()) ? fields[7].GetUInt8() : sWorld.getConfig(CONFIG_UINT32_EXPANSION));
+    expansion = ((sWorld.getConfig(CONFIG_UINT32_EXPANSION) > fields[6].GetUInt8()) ? fields[6].GetUInt8() : sWorld.getConfig(CONFIG_UINT32_EXPANSION));
 
     N.SetHexStr ("894B645E89E1535BBDAD5B8B290650530801B18EBFBF5E8FAB3C82872A3E9BB7");
     g.SetDword (7);
 
-    v.SetHexStr(fields[5].GetString());
-    s.SetHexStr (fields[6].GetString());
+    v.SetHexStr(fields[4].GetString());
+    s.SetHexStr (fields[5].GetString());
     m_s = s;
 
     const char* sStr = s.AsHexStr ();                       //Must be freed by OPENSSL_free()
@@ -836,9 +835,9 @@ int WorldSocket::HandleAuthSession (WorldPacket& recvPacket)
     OPENSSL_free ((void*) vStr);
 
     ///- Re-check ip locking (same check as in realmd).
-    if (fields[4].GetUInt8 () == 1) // if ip is locked
+    if (fields[3].GetUInt8 () == 1) // if ip is locked
     {
-        if (strcmp (fields[3].GetString (), GetRemoteAddress ().c_str ()))
+        if (strcmp (fields[2].GetString (), GetRemoteAddress ().c_str ()))
         {
             packet.Initialize (SMSG_AUTH_RESPONSE, 1);
             packet << uint8 (AUTH_FAILED);
@@ -851,19 +850,38 @@ int WorldSocket::HandleAuthSession (WorldPacket& recvPacket)
     }
 
     id = fields[0].GetUInt32 ();
-    security = fields[1].GetUInt16 ();
+    //security = fields[1].GetUInt16 ();
+	/*
     if(security > SEC_ADMINISTRATOR)                        // prevent invalid security settings in DB
         security = SEC_ADMINISTRATOR;
+*/
+    K.SetHexStr (fields[1].GetString ());
 
-    K.SetHexStr (fields[2].GetString ());
+    time_t mutetime = time_t (fields[7].GetUInt64 ());
 
-    time_t mutetime = time_t (fields[8].GetUInt64 ());
-
-    locale = LocaleConstant (fields[9].GetUInt8 ());
+    locale = LocaleConstant (fields[8].GetUInt8 ());
     if (locale >= MAX_LOCALE)
         locale = LOCALE_enUS;
 
     delete result;
+	// Checks gmlevel per Realm
+	result = 
+		LoginDatabase.PQuery ("SELECT "
+							  "RealmID, "            //0
+							  "gmlevel "             //1
+							  "FROM account_access "
+							  "WHERE id = '%d'"
+							  " AND (RealmID = '%d'"
+							  " OR RealmID = '-1')",
+							  id, realmID);
+	if(!result)
+    	security = 0;
+	else
+	{
+		fields = result->Fetch ();
+		security = fields[1].GetInt32();
+		delete result;
+	}
 
     // Re-check account ban (same check as in realmd)
     QueryResult *banresult =
diff --git a/src/mangosd/CliRunnable.cpp b/src/mangosd/CliRunnable.cpp
index c2951c2..46eb74e 100644
--- a/src/mangosd/CliRunnable.cpp
+++ b/src/mangosd/CliRunnable.cpp
@@ -461,7 +461,11 @@ bool ChatHandler::HandleAccountOnlineListCommand(char* args)
 
     ///- Get the list of accounts ID logged to the realm
     //                                                 0   1         2        3        4
-    QueryResult *result = LoginDatabase.PQuery("SELECT id, username, last_ip, gmlevel, expansion FROM account WHERE active_realm_id = %u", realmID);
+    QueryResult *result = LoginDatabase.PQuery("SELECT a.username, a.last_ip, aa.gmlevel, a.expansion "
+                                 "FROM account a "
+                                 "LEFT JOIN account_access aa "
+                                 "ON (a.id = aa.id) "
+                                 "WHERE a.id = '%u'", realmID);
 
     return ShowAccountListHelper(result,&limit);
 }
diff --git a/src/realmd/AuthSocket.cpp b/src/realmd/AuthSocket.cpp
index 2e48344..ba9b462 100644
--- a/src/realmd/AuthSocket.cpp
+++ b/src/realmd/AuthSocket.cpp
@@ -389,7 +389,16 @@ bool AuthSocket::_HandleLogonChallenge()
         ///- Get the account details from the account table
         // No SQL injection (escaped user name)
 
-        result = LoginDatabase.PQuery("SELECT sha_pass_hash,id,locked,last_ip,gmlevel,v,s FROM account WHERE username = '%s'",_safelogin.c_str ());
+        result = LoginDatabase.PQuery("SELECT a.sha_pass_hash,a.id,a.locked,a.last_ip,aa.gmlevel,a.v,a.s "
+
+                                 "FROM account a "
+
+                                 "LEFT JOIN account_access aa "
+
+                                 "ON (a.id = aa.id) "
+
+                                 "WHERE a.username = '%s'",_safelogin.c_str ());
+
         if( result )
         {
             ///- If the IP is 'locked', check that the player comes indeed from the correct IP address
-- 
1.7.2.5

