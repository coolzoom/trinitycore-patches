From 08c2524ebb3428fd218c63741bdc5ea535eb6f08 Mon Sep 17 00:00:00 2001
From: Surion <realmsofwarcraft@gmail.com>
Date: Sun, 15 Jul 2012 14:25:14 -0500
Subject: [PATCH] 2012_07_15-VIPAccounts-mangosone

---
 sql/VIPAccounts/realmd-VIPAccount.sql |    8 ++++++++
 src/game/Formulas.h                   |    3 ++-
 src/game/Player.cpp                   |    5 ++++-
 src/game/World.cpp                    |    4 ++++
 src/game/World.h                      |    3 +++
 src/game/WorldSession.cpp             |    4 ++--
 src/game/WorldSession.h               |    4 +++-
 src/game/WorldSocket.cpp              |   13 ++++++++++++-
 src/mangosd/mangosd.conf.dist.in      |   11 +++++++++++
 src/realmd/Main.cpp                   |    1 +
 10 files changed, 50 insertions(+), 6 deletions(-)
 create mode 100644 sql/VIPAccounts/realmd-VIPAccount.sql

diff --git a/sql/VIPAccounts/realmd-VIPAccount.sql b/sql/VIPAccounts/realmd-VIPAccount.sql
new file mode 100644
index 0000000..df317ed
--- /dev/null
+++ b/sql/VIPAccounts/realmd-VIPAccount.sql
@@ -0,0 +1,8 @@
+CREATE TABLE IF NOT EXISTS `account_premium` (
+  `id` int(11) NOT NULL default '0' COMMENT 'Account id',
+  `setdate` bigint(40) NOT NULL default '0',
+  `unsetdate` bigint(40) NOT NULL default '0',
+  `premium_type` tinyint(4) unsigned NOT NULL default '1',
+  `active` tinyint(4) NOT NULL default '1',
+  PRIMARY KEY  (`id`,`setdate`)
+) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='Premium Accounts';
\ No newline at end of file
diff --git a/src/game/Formulas.h b/src/game/Formulas.h
index 18de6b0..ce14e0f 100644
--- a/src/game/Formulas.h
+++ b/src/game/Formulas.h
@@ -121,7 +121,8 @@ namespace MaNGOS
             if(u->GetTypeId()==TYPEID_UNIT && ((Creature*)u)->IsElite())
                 xp_gain *= 2;
 
-            return (uint32)(xp_gain*sWorld.getConfig(CONFIG_FLOAT_RATE_XP_KILL));
+            float premium_rate = pl->GetSession()->IsPremium() ? sWorld.getRate(CONFIG_FLOAT_RATE_XP_KILL_PREMIUM) : 1.0f;
+            return (uint32)(xp_gain*sWorld.getConfig(CONFIG_FLOAT_RATE_XP_KILL)*premium_rate);
         }
 
         inline float xp_in_group_rate(uint32 count, bool isRaid)
diff --git a/src/game/Player.cpp b/src/game/Player.cpp
index c36ab4d..560b288 100644
--- a/src/game/Player.cpp
+++ b/src/game/Player.cpp
@@ -5882,7 +5882,8 @@ void Player::CheckAreaExploreAndOutdoor()
                 {
                     XP = uint32(sObjectMgr.GetBaseXP(p->area_level)*sWorld.getConfig(CONFIG_FLOAT_RATE_XP_EXPLORE));
                 }
-
+                if(GetSession()->IsPremium())
+                XP *= sWorld.getRate(CONFIG_FLOAT_RATE_XP_EXPLORE_PREMIUM);
                 GiveXP( XP, NULL );
                 SendExplorationExperience(area,XP);
             }
@@ -13180,6 +13181,8 @@ void Player::RewardQuest(Quest const *pQuest, uint32 reward, Object* questGiver,
 
     // Used for client inform but rewarded only in case not max level
     uint32 xp = uint32(pQuest->XPValue(this) * sWorld.getConfig(CONFIG_FLOAT_RATE_XP_QUEST));
+    if (GetSession()->IsPremium())
+        XP *= sWorld.getRate(CONFIG_FLOAT_RATE_XP_QUEST_PREMIUM);
 
     if (getLevel() < sWorld.getConfig(CONFIG_UINT32_MAX_PLAYER_LEVEL))
         GiveXP(xp , NULL);
diff --git a/src/game/World.cpp b/src/game/World.cpp
index 126eac8..ae9d636 100644
--- a/src/game/World.cpp
+++ b/src/game/World.cpp
@@ -448,8 +448,12 @@ void World::LoadConfigSettings(bool reload)
     setConfigPos(CONFIG_FLOAT_RATE_DROP_ITEM_REFERENCED, "Rate.Drop.Item.Referenced", 1.0f);
     setConfigPos(CONFIG_FLOAT_RATE_DROP_MONEY,           "Rate.Drop.Money", 1.0f);
     setConfig(CONFIG_FLOAT_RATE_XP_KILL,    "Rate.XP.Kill",    1.0f);
+    setConfig(CONFIG_FLOAT_RATE_XP_KILL_PREMIUM,         "Rate.XP.Kill.Premium", 1.0f);
     setConfig(CONFIG_FLOAT_RATE_XP_QUEST,   "Rate.XP.Quest",   1.0f);
+    setConfig(CONFIG_FLOAT_RATE_XP_QUEST_PREMIUM,        "Rate.XP.Quest.Premium", 1.0f);
     setConfig(CONFIG_FLOAT_RATE_XP_EXPLORE, "Rate.XP.Explore", 1.0f);
+    setConfig(CONFIG_FLOAT_RATE_XP_EXPLORE_PREMIUM,      "Rate.XP.Explore.Premium", 1.0f);
+
     setConfig(CONFIG_FLOAT_RATE_REPUTATION_GAIN,           "Rate.Reputation.Gain", 1.0f);
     setConfig(CONFIG_FLOAT_RATE_REPUTATION_LOWLEVEL_KILL,  "Rate.Reputation.LowLevel.Kill", 1.0f);
     setConfig(CONFIG_FLOAT_RATE_REPUTATION_LOWLEVEL_QUEST, "Rate.Reputation.LowLevel.Quest", 1.0f);
diff --git a/src/game/World.h b/src/game/World.h
index 29463f7..8da1b02 100644
--- a/src/game/World.h
+++ b/src/game/World.h
@@ -209,8 +209,11 @@ enum eConfigFloatValues
     CONFIG_FLOAT_RATE_DROP_ITEM_REFERENCED,
     CONFIG_FLOAT_RATE_DROP_MONEY,
     CONFIG_FLOAT_RATE_XP_KILL,
+    CONFIG_FLOAT_RATE_XP_KILL_PREMIUM,
     CONFIG_FLOAT_RATE_XP_QUEST,
+    CONFIG_FLOAT_RATE_XP_QUEST_PREMIUM,
     CONFIG_FLOAT_RATE_XP_EXPLORE,
+    CONFIG_FLOAT_RATE_XP_EXPLORE_PREMIUM,
     CONFIG_FLOAT_RATE_REPUTATION_GAIN,
     CONFIG_FLOAT_RATE_REPUTATION_LOWLEVEL_KILL,
     CONFIG_FLOAT_RATE_REPUTATION_LOWLEVEL_QUEST,
diff --git a/src/game/WorldSession.cpp b/src/game/WorldSession.cpp
index 4248356..0060119 100644
--- a/src/game/WorldSession.cpp
+++ b/src/game/WorldSession.cpp
@@ -82,9 +82,9 @@ bool WorldSessionFilter::Process(WorldPacket* packet)
 }
 
 /// WorldSession constructor
-WorldSession::WorldSession(uint32 id, WorldSocket *sock, AccountTypes sec, uint8 expansion, time_t mute_time, LocaleConstant locale) :
+WorldSession::WorldSession(uint32 id, WorldSocket *sock, AccountTypes sec, bool ispremium, uint8 expansion, time_t mute_time, LocaleConstant locale) :
 LookingForGroup_auto_join(false), LookingForGroup_auto_add(false), m_muteTime(mute_time),
-_player(NULL), m_Socket(sock),_security(sec), _accountId(id), m_expansion(expansion), _logoutTime(0),
+_player(NULL), m_Socket(sock),_security(sec), _ispremium(ispremium), _accountId(id), m_expansion(expansion), _logoutTime(0),
 m_inQueue(false), m_playerLoading(false), m_playerLogout(false), m_playerRecentlyLogout(false), m_playerSave(false),
 m_sessionDbcLocale(sWorld.GetAvailableDbcLocale(locale)), m_sessionDbLocaleIndex(sObjectMgr.GetIndexForLocale(locale)),
 m_latency(0), m_tutorialState(TUTORIALDATA_UNCHANGED)
diff --git a/src/game/WorldSession.h b/src/game/WorldSession.h
index 2fc0ff5..cf710b4 100644
--- a/src/game/WorldSession.h
+++ b/src/game/WorldSession.h
@@ -146,7 +146,7 @@ class MANGOS_DLL_SPEC WorldSession
 {
     friend class CharacterHandler;
     public:
-        WorldSession(uint32 id, WorldSocket *sock, AccountTypes sec, uint8 expansion, time_t mute_time, LocaleConstant locale);
+        WorldSession(uint32 id, WorldSocket *sock, AccountTypes sec, bool ispremium, uint8 expansion, time_t mute_time, LocaleConstant locale);
         ~WorldSession();
 
         bool PlayerLoading() const { return m_playerLoading; }
@@ -165,6 +165,7 @@ class MANGOS_DLL_SPEC WorldSession
         void SendQueryTimeResponse();
 
         AccountTypes GetSecurity() const { return _security; }
+        bool IsPremium() const { return _ispremium; }
         uint32 GetAccountId() const { return _accountId; }
         Player* GetPlayer() const { return _player; }
         char const* GetPlayerName() const;
@@ -751,6 +752,7 @@ class MANGOS_DLL_SPEC WorldSession
         AccountTypes _security;
         uint32 _accountId;
         uint8 m_expansion;
+        bool _ispremium;
 
         time_t _logoutTime;
         bool m_inQueue;                                     // session wait in auth.queue
diff --git a/src/game/WorldSocket.cpp b/src/game/WorldSocket.cpp
index eb1f0ca..2223344 100644
--- a/src/game/WorldSocket.cpp
+++ b/src/game/WorldSocket.cpp
@@ -634,6 +634,7 @@ int WorldSocket::HandleAuthSession (WorldPacket& recvPacket)
     uint8 expansion = 0;
     LocaleConstant locale;
     std::string account;
+    bool isPremium = false;
     Sha1Hash sha1;
     BigNumber v, s, g, N, K;
     WorldPacket packet, SendAddonPacked;
@@ -765,6 +766,16 @@ int WorldSocket::HandleAuthSession (WorldPacket& recvPacket)
         return -1;
     }
 
+    QueryResult_AutoPtr premresult =
+        LoginDatabase.PQuery ("SELECT 1 "
+                                "FROM account_premium "
+                                "WHERE id = '%u' "
+                                "AND active = 1",
+                                id);
+    if (premresult) // if account premium
+    {
+        isPremium = true;
+    }
     // Check locked state for server
     AccountTypes allowedAccountType = sWorld.GetPlayerSecurityLimit ();
 
@@ -817,7 +828,7 @@ int WorldSocket::HandleAuthSession (WorldPacket& recvPacket)
     stmt.PExecute(address.c_str(), account.c_str());
 
     // NOTE ATM the socket is single-threaded, have this in mind ...
-    ACE_NEW_RETURN (m_Session, WorldSession (id, this, AccountTypes(security), expansion, mutetime, locale), -1);
+    ACE_NEW_RETURN (m_Session, WorldSession (id, this, AccountTypes(security), isPremium, expansion, mutetime, locale), -1);
 
     m_Crypt.Init(&K);
 
diff --git a/src/mangosd/mangosd.conf.dist.in b/src/mangosd/mangosd.conf.dist.in
index bb6c557..744d4df 100644
--- a/src/mangosd/mangosd.conf.dist.in
+++ b/src/mangosd/mangosd.conf.dist.in
@@ -1177,8 +1177,11 @@ Visibility.AIRelocationNotifyDelay = 1000
 #         Default: 1
 #
 #    Rate.XP.Kill
+#    Rate.XP.Kill.Premium
 #    Rate.XP.Quest
+#    Rate.XP.Quest.Premium
 #    Rate.XP.Explore
+#    Rate.XP.Explore.Premium
 #        XP rates
 #        Default: 1
 #
@@ -1321,8 +1324,11 @@ Rate.Drop.Item.Artifact = 1
 Rate.Drop.Item.Referenced = 1
 Rate.Drop.Money = 1
 Rate.XP.Kill    = 1
+Rate.XP.Kill.Premium    = 1
 Rate.XP.Quest   = 1
+Rate.XP.Quest.Premium   = 1
 Rate.XP.Explore = 1
+Rate.XP.Explore.Premium = 1
 Rate.Rest.InGame = 1
 Rate.Rest.Offline.InTavernOrCity = 1
 Rate.Rest.Offline.InWilderness = 1
@@ -1444,6 +1450,11 @@ BattleGround.PremadeGroupWaitForMatch = 1800000
 #    Arena.ArenaSeason.ID
 #        Current area season id, used for selection some rated arena settings.
 #        Default: 1
+#    Rate.XP.Kill.Premium
+#    Rate.XP.Quest.Premium
+#    Rate.XP.Explore.Premium
+#        XP rates Premium modifier
+#        Default: 1
 #
 #    Arena.StartRating
 #        Default Rating at team creation
diff --git a/src/realmd/Main.cpp b/src/realmd/Main.cpp
index 9db9f68..1552c04 100644
--- a/src/realmd/Main.cpp
+++ b/src/realmd/Main.cpp
@@ -253,6 +253,7 @@ extern int main(int argc, char **argv)
     // set expired bans to inactive
     LoginDatabase.BeginTransaction();
     LoginDatabase.Execute("UPDATE account_banned SET active = 0 WHERE unbandate<=UNIX_TIMESTAMP() AND unbandate<>bandate");
+	LoginDatabase.Execute("UPDATE account_premium SET active = 0 WHERE unsetdate<=UNIX_TIMESTAMP() AND unsetdate<>setdate");
     LoginDatabase.Execute("DELETE FROM ip_banned WHERE unbandate<=UNIX_TIMESTAMP() AND unbandate<>bandate");
     LoginDatabase.CommitTransaction();
 
-- 
1.7.2.5

