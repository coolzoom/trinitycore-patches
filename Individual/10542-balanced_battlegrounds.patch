diff -r dc4fc5c8b306 src/server/game/Battlegrounds/Battleground.cpp
--- a/src/server/game/Battlegrounds/Battleground.cpp	Tue Nov 30 21:32:00 2010 +0100
+++ b/src/server/game/Battlegrounds/Battleground.cpp	Tue Nov 30 17:42:01 2010 -0500
@@ -155,6 +155,7 @@
     m_MaxPlayers        = 0;
     m_MinPlayersPerTeam = 0;
     m_MinPlayers        = 0;
+	m_balance           = 0;
 
     m_MapId             = 0;
     m_Map               = NULL;
@@ -331,6 +332,7 @@
     /*********************************************************/
 
     // if less then minimum players are in on one side, then start premature finish timer
+	UpdateBalance();
     if (GetStatus() == STATUS_IN_PROGRESS && !isArena() && sBattlegroundMgr.GetPrematureFinishTime() && (GetPlayersCountByTeam(ALLIANCE) < GetMinPlayersPerTeam() || GetPlayersCountByTeam(HORDE) < GetMinPlayersPerTeam()))
     {
         if (!m_PrematureCountDown)
@@ -998,8 +1000,8 @@
         if (isBattleground() && GetStatus() < STATUS_WAIT_LEAVE)
         {
             // a player has left the battleground, so there are free slots -> add to queue
-            AddToBGFreeSlotQueue();
-            sBattlegroundMgr.ScheduleQueueUpdate(0, 0, bgQueueTypeId, bgTypeId, GetBracketId());
+			AddToBGFreeSlotQueue();
+			sBattlegroundMgr.ScheduleQueueUpdate(0, 0, bgQueueTypeId, bgTypeId, GetBracketId());
         }
         // Let others know
         WorldPacket data;
@@ -1248,6 +1250,8 @@
 // returns the number how many players can join battleground to MaxPlayersPerTeam
 uint32 Battleground::GetFreeSlotsForTeam(uint32 Team) const
 {
+    if (HasBalanceTeam(Team))
+	    return 0;
     //if BG is starting ... invite anyone
     if (GetStatus() == STATUS_WAIT_JOIN)
         return (GetInvitedCount(Team) < GetMaxPlayersPerTeam()) ? GetMaxPlayersPerTeam() - GetInvitedCount(Team) : 0;
@@ -1304,6 +1308,28 @@
 bool Battleground::HasFreeSlots() const
 {
     return GetPlayersSize() < GetMaxPlayers();
+}
+
+void Battleground::UpdateBalance()
+{
+	if (GetPlayersCountByTeam(ALLIANCE) < GetPlayersCountByTeam(HORDE))
+		m_balance = GetPlayersCountByTeam(HORDE) - GetPlayersCountByTeam(ALLIANCE);
+	else if (GetPlayersCountByTeam(HORDE) < GetPlayersCountByTeam(ALLIANCE))
+		m_balance = GetPlayersCountByTeam(ALLIANCE) - GetPlayersCountByTeam(HORDE);
+	else
+		m_balance = 0;
+}
+
+bool Battleground::HasBalanceTeam(uint32 TeamId) const
+{
+    if (sWorld.getIntConfig(CONFIG_BALANCE_MINIMUM) < 0)
+		return false;
+	if (m_balance > sWorld.getIntConfig(CONFIG_BALANCE_MINIMUM))
+	{
+		if (GetPlayersCountByTeam(TeamId) > GetPlayersCountByTeam(GetOtherTeam(TeamId)))
+			return true;
+	}
+	return false;
 }
 
 void Battleground::UpdatePlayerScore(Player *Source, uint32 type, uint32 value, bool doAddHonor)
@@ -1790,7 +1816,7 @@
     return 0;
 }
 
-uint32 Battleground::GetOtherTeam(uint32 teamId)
+uint32 Battleground::GetOtherTeam(uint32 teamId) const
 {
     return (teamId) ? ((teamId == ALLIANCE) ? HORDE : ALLIANCE) : 0;
 }
diff -r dc4fc5c8b306 src/server/game/Battlegrounds/Battleground.h
--- a/src/server/game/Battlegrounds/Battleground.h	Tue Nov 30 21:32:00 2010 +0100
+++ b/src/server/game/Battlegrounds/Battleground.h	Tue Nov 30 17:42:02 2010 -0500
@@ -416,6 +416,8 @@
                 return m_InvitedHorde;
         }
         bool HasFreeSlots() const;
+		bool HasBalanceTeam(uint32 TeamId) const;
+		void UpdateBalance();
         uint32 GetFreeSlotsForTeam(uint32 Team) const;
 
         bool isArena() const        { return m_IsArena; }
@@ -568,7 +570,7 @@
 
         // since arenas can be AvA or Hvh, we have to get the "temporary" team of a player
         uint32 GetPlayerTeam(uint64 guid);
-        uint32 GetOtherTeam(uint32 teamId);
+        uint32 GetOtherTeam(uint32 teamId) const;
         bool IsPlayerInBattleground(uint64 guid);
 
         void SetDeleteThis() {m_SetDeleteThis = true;}
@@ -627,6 +629,7 @@
         bool   m_IsRated;                                   // is this battle rated?
         bool   m_PrematureCountDown;
         uint32 m_PrematureCountDownTimer;
+		uint32 m_balance;
         char const *m_Name;
 
         /* Player lists */
diff -r dc4fc5c8b306 src/server/game/Battlegrounds/BattlegroundQueue.cpp
--- a/src/server/game/Battlegrounds/BattlegroundQueue.cpp	Tue Nov 30 21:32:00 2010 +0100
+++ b/src/server/game/Battlegrounds/BattlegroundQueue.cpp	Tue Nov 30 17:42:02 2010 -0500
@@ -761,10 +761,10 @@
             FillPlayersToBG(bg, bracket_id);
 
             // now everything is set, invite players
-            for (GroupsQueueType::const_iterator citr = m_SelectionPools[BG_TEAM_ALLIANCE].SelectedGroups.begin(); citr != m_SelectionPools[BG_TEAM_ALLIANCE].SelectedGroups.end(); ++citr)
-                InviteGroupToBG((*citr), bg, (*citr)->Team);
-            for (GroupsQueueType::const_iterator citr = m_SelectionPools[BG_TEAM_HORDE].SelectedGroups.begin(); citr != m_SelectionPools[BG_TEAM_HORDE].SelectedGroups.end(); ++citr)
-                InviteGroupToBG((*citr), bg, (*citr)->Team);
+		    for (GroupsQueueType::const_iterator citr = m_SelectionPools[BG_TEAM_ALLIANCE].SelectedGroups.begin(); citr != m_SelectionPools[BG_TEAM_ALLIANCE].SelectedGroups.end(); ++citr)
+				InviteGroupToBG((*citr), bg, (*citr)->Team);
+			for (GroupsQueueType::const_iterator citr = m_SelectionPools[BG_TEAM_HORDE].SelectedGroups.begin(); citr != m_SelectionPools[BG_TEAM_HORDE].SelectedGroups.end(); ++citr)
+				InviteGroupToBG((*citr), bg, (*citr)->Team);
 
             if (!bg->HasFreeSlots())
             {
diff -r dc4fc5c8b306 src/server/game/World/World.cpp
--- a/src/server/game/World/World.cpp	Tue Nov 30 21:32:00 2010 +0100
+++ b/src/server/game/World/World.cpp	Tue Nov 30 17:42:02 2010 -0500
@@ -1180,6 +1180,9 @@
 
     // MySQL ping time interval
     m_int_configs[CONFIG_DB_PING_INTERVAL] = sConfig.GetIntDefault("MaxPingTime", 1800);
+	
+	// Balance Battleground
+	m_int_configs[CONFIG_BALANCE_MINIMUM] = sConfig.GetIntDefault("Battleground.Balance", -1);
 
     sScriptMgr.OnConfigLoad(reload);
 }
diff -r dc4fc5c8b306 src/server/game/World/World.h
--- a/src/server/game/World/World.h	Tue Nov 30 21:32:00 2010 +0100
+++ b/src/server/game/World/World.h	Tue Nov 30 17:42:02 2010 -0500
@@ -307,6 +307,7 @@
     CONFIG_AUTOBROADCAST_INTERVAL,
     CONFIG_MAX_RESULTS_LOOKUP_COMMANDS,
     CONFIG_DB_PING_INTERVAL,
+	CONFIG_BALANCE_MINIMUM,
     INT_CONFIG_VALUE_COUNT
 };
 
diff -r dc4fc5c8b306 src/server/worldserver/worldserver.conf.dist
--- a/src/server/worldserver/worldserver.conf.dist	Tue Nov 30 21:32:00 2010 +0100
+++ b/src/server/worldserver/worldserver.conf.dist	Tue Nov 30 17:42:02 2010 -0500
@@ -2338,6 +2338,13 @@
 
 Battleground.Random.ResetHour = 6
 
+#	 Battleground.Balance
+#		 Maximum gap between two teams
+#		 Default: -1 (disable)
+#
+  
+Battleground.Balance = -1
+
 #
 ###################################################################################################
 
